// Generated by Xata Codegen 0.30.1. Please do not edit.
import type {
  BaseClientOptions,
  SchemaInference
} from "@xata.io/client";
import { buildClient } from "@xata.io/client";
import dotenv from 'dotenv';

// Load environment variables
dotenv.config();

const tables = [] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type DatabaseSchema = {};

const defaultOptions = {
  databaseURL: "https://solo-s-workspace-5unga4.us-east-1.xata.sh/db/crud-1",
  apiKey: process.env.XATA_API_KEY, // Add the API key here
};

const DatabaseClient = buildClient();

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
